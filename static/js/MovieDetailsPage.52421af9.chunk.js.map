{"version":3,"file":"static/js/MovieDetailsPage.52421af9.chunk.js","mappings":"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","sources":["services/moviesApi.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.js","views/MovieDetailsPage.js"],"sourcesContent":["import Axios from 'axios';\r\n\r\nconst API_KEY = 'd3c00761eff125b45afbcd52d8235bc7';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nexport const fetchTrendingMovies = async page => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}trending/movie/week?api_key=${API_KEY}&page=${page}`,\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const fetchMovies = async (query, page) => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const fetchMoviesById = async id => {\r\n  const response = await Axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const fetchCastByMovieId = async id => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`,\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const fetchReviewsByMovieId = async id => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`,\r\n  );\r\n\r\n  return response.data;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const MovieCard = styled.div`\r\n  display: flex;\r\n  padding-bottom: 15px;\r\n  margin-bottom: 15px;\r\n  border-bottom: 1px solid #2a363b;\r\n`;\r\nexport const Images = styled.img`\r\n  width: 300px;\r\n  margin-right: 50px;\r\n`;\r\nexport const Title = styled.h2`\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\nexport const TitleText = styled.h3`\r\n  margin-bottom: 5px;\r\n`;\r\nexport const Span = styled.span`\r\n  font-weight: 700;\r\n  margin-right: 30px;\r\n`;\r\nexport const Text = styled.p`\r\n  margin-bottom: 15px;\r\n`;\r\nexport const GenresList = styled.ul`\r\n  list-style: disc;\r\n  margin-bottom: 15px;\r\n  margin-left: 16px;\r\n`;\r\nexport const Item = styled.li`\r\n  :not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nexport const ButtonBack = styled.button`\r\n  margin-bottom: 15px;\r\n  padding: 5px 8px;\r\n  border-radius: 2px;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #2a363b;\r\n  border: 0;\r\n  text-decoration: none;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  :hover,\r\n  :focus-visible {\r\n    background-color: #2196f3;\r\n    color: #fff;\r\n  }\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { Link, useParams, useLocation, useNavigate } from 'react-router-dom';\r\nimport { fetchMoviesById } from '../../services/moviesApi';\r\nimport Loader from '../Loader';\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nimport {\r\n  MovieCard,\r\n  Images,\r\n  Title,\r\n  Span,\r\n  Text,\r\n  TitleText,\r\n  GenresList,\r\n  Item,\r\n  ButtonBack,\r\n} from './MovieDetails.styled';\r\n\r\nexport default function MovieDetails() {\r\n  const [movie, setMovie] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { movieId } = useParams();\r\n  const ImgBaseURL = 'https://image.tmdb.org/t/p/original';\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchMovieDetails = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const data = await fetchMoviesById(movieId);\r\n        setMovie(data);\r\n      } catch {\r\n        toast.error('Something wrong!');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchMovieDetails();\r\n  }, [movieId]);\r\n\r\n  const onGoBack = () => {\r\n    navigate(location.state?.from ?? '/');\r\n  };\r\n  return isLoading ? (\r\n    <Loader />\r\n  ) : (\r\n    !!movie && (\r\n      <>\r\n        <ButtonBack type=\"button\" onClick={onGoBack}>\r\n          <FaArrowLeft />\r\n          Go back\r\n        </ButtonBack>\r\n        <MovieCard>\r\n          <Images\r\n            src={`${ImgBaseURL}/${movie.poster_path}`}\r\n            alt={movie.title}\r\n          />\r\n          <div>\r\n            <Title>{movie.title}</Title>\r\n            <Text>\r\n              <Span>Vote/Votes:</Span> {movie.vote_average} / {movie.vote_count}\r\n            </Text>\r\n            <TitleText>Overview</TitleText>\r\n            <Text>{movie.overview}</Text>\r\n            <TitleText>Genres</TitleText>\r\n            <GenresList>\r\n              {movie.genres.map(item => (\r\n                <Item key={item.id}>{item.name}</Item>\r\n              ))}\r\n            </GenresList>\r\n            <TitleText>Additional information</TitleText>\r\n            <ul>\r\n              <Item>\r\n                <Link to=\"cast\" state={{ from: location.state?.from }}>\r\n                  Cast\r\n                </Link>\r\n              </Item>\r\n              <Item>\r\n                <Link to=\"reviews\" state={{ from: location.state?.from }}>\r\n                  Reviews\r\n                </Link>\r\n              </Item>\r\n            </ul>\r\n          </div>\r\n        </MovieCard>\r\n      </>\r\n    )\r\n  );\r\n}\r\n","import { Suspense } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport MovieDetails from '../components/MovieDetails';\r\nimport Loader from '../components/Loader';\r\n\r\nexport default function MovieDetailsPage() {\r\n  return (\r\n    <>\r\n      <MovieDetails />\r\n      <Suspense fallback={<Loader />}>\r\n        <Outlet />\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n"],"names":["API_KEY","BASE_URL","fetchTrendingMovies","page","Axios","response","data","fetchMovies","query","fetchMoviesById","id","fetchCastByMovieId","fetchReviewsByMovieId","MovieCard","styled","Images","Title","TitleText","Span","Text","GenresList","Item","ButtonBack","MovieDetails","useState","movie","setMovie","isLoading","setIsLoading","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchMovieDetails","toast","Loader","type","onClick","state","from","src","poster_path","alt","title","vote_average","vote_count","overview","genres","map","item","name","to","MovieDetailsPage","Suspense","fallback"],"sourceRoot":""}