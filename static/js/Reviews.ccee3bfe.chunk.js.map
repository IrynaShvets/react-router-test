{"version":3,"file":"static/js/Reviews.ccee3bfe.chunk.js","mappings":"6RAGaA,EAAaC,EAAAA,GAAAA,GAAH,yFAMVC,EAAOD,EAAAA,GAAAA,EAAH,gDAGJE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,8C,SCTN,SAASI,EAAT,GAA2C,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAC5C,OACE,2BACE,UAACP,EAAD,YACE,SAACG,EAAD,IACCG,MAEH,SAACJ,EAAD,UAAOK,O,cCHE,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,2FACnBJ,GAAa,GADM,mBAGEK,EAAAA,EAAAA,IAAsBJ,GAHxB,OAGXK,EAHW,OAIjBR,EAAWQ,EAAKC,SAJC,gDAMjBC,EAAAA,GAAAA,MAAY,oBANK,yBAQjBR,GAAa,GARI,4EAAH,qDAWlBI,MACC,CAACH,IAEGF,GACL,SAACU,EAAA,EAAD,IACEZ,EAAQa,OAAS,GACnB,wBACGb,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,GAAInB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,SAACF,EAAD,CAAsBC,OAAQA,EAAQC,QAASA,GAA7BkB,SAItB,sE,0MClCEC,EAAU,mCACVC,EAAW,gCAEJC,EAAmB,mCAAG,WAAMC,GAAN,uFACVC,IAAAA,IAAA,UAClBH,EADkB,uCACqBD,EADrB,iBACqCG,IAF3B,cAC3BE,EAD2B,yBAI1BA,EAASZ,MAJiB,2CAAH,sDAOnBa,EAAW,mCAAG,WAAOC,EAAOJ,GAAd,uFACFC,IAAAA,IAAA,UAClBH,EADkB,gCACcD,EADd,kBAC+BO,EAD/B,iBAC6CJ,IAF3C,cACnBE,EADmB,yBAKlBA,EAASZ,MALS,2CAAH,wDAQXe,EAAe,mCAAG,WAAMT,GAAN,uFACNK,IAAAA,IAAA,UAAaH,EAAb,iBAA8BF,EAA9B,oBAA4CC,IADtC,cACvBK,EADuB,yBAGtBA,EAASZ,MAHa,2CAAH,sDAMfgB,EAAkB,mCAAG,WAAMV,GAAN,uFACTK,IAAAA,IAAA,UAClBH,EADkB,iBACDF,EADC,4BACqBC,IAFZ,cAC1BK,EAD0B,yBAKzBA,EAASZ,MALgB,2CAAH,sDAQlBD,EAAqB,mCAAG,WAAMO,GAAN,uFACZK,IAAAA,IAAA,UAClBH,EADkB,iBACDF,EADC,4BACqBC,IAFT,cAC7BK,EAD6B,yBAK5BA,EAASZ,MALmB,2CAAH","sources":["components/Reviews/ReviewsItem/ReviewsItem.styled.js","components/Reviews/ReviewsItem/ReviewsItem.js","components/Reviews/Reviews.js","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { FaUserTie } from 'react-icons/fa';\r\n\r\nexport const AuthorName = styled.h3`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  margin-bottom: 30px;\r\n`;\r\nexport const UserIcon = styled(FaUserTie)`\r\n  margin-right: 5px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { AuthorName, Text, UserIcon } from './ReviewsItem.styled';\r\n\r\nexport default function ReviewsItem({ author, content }) {\r\n  return (\r\n    <li>\r\n      <AuthorName>\r\n        <UserIcon />\r\n        {author}\r\n      </AuthorName>\r\n      <Text>{content}</Text>\r\n    </li>\r\n  );\r\n}\r\n\r\nReviewsItem.propTypes = {\r\n  author: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport { fetchReviewsByMovieId } from '../../services/moviesApi';\r\nimport ReviewsItem from './ReviewsItem/ReviewsItem';\r\nimport Loader from '../Loader';\r\n\r\nexport default function Reviews() {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchReviews = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const data = await fetchReviewsByMovieId(movieId);\r\n        setReviews(data.results);\r\n      } catch {\r\n        toast.error('Something wrong!');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchReviews();\r\n  }, [movieId]);\r\n\r\n  return isLoading ? (\r\n    <Loader />\r\n  ) : reviews.length > 0 ? (\r\n    <ul>\r\n      {reviews.map(({ id, author, content }) => (\r\n        <ReviewsItem key={id} author={author} content={content} />\r\n      ))}\r\n    </ul>\r\n  ) : (\r\n    <p>We don't have any reviews for this movie</p>\r\n  );\r\n}\r\n","import Axios from 'axios';\r\n\r\nconst API_KEY = 'd3c00761eff125b45afbcd52d8235bc7';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nexport const fetchTrendingMovies = async page => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}trending/movie/week?api_key=${API_KEY}&page=${page}`,\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const fetchMovies = async (query, page) => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const fetchMoviesById = async id => {\r\n  const response = await Axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const fetchCastByMovieId = async id => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`,\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const fetchReviewsByMovieId = async id => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`,\r\n  );\r\n\r\n  return response.data;\r\n};\r\n"],"names":["AuthorName","styled","Text","UserIcon","FaUserTie","ReviewsItem","author","content","Reviews","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","fetchReviews","fetchReviewsByMovieId","data","results","toast","Loader","length","map","id","API_KEY","BASE_URL","fetchTrendingMovies","page","Axios","response","fetchMovies","query","fetchMoviesById","fetchCastByMovieId"],"sourceRoot":""}