{"version":3,"file":"static/js/MoviesPage.771c77ee.chunk.js","mappings":"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","sources":["components/ButtonLoadMore/ButtonLoadMore.styled.js","components/ButtonLoadMore/ButtonLoadMore.js","components/MoviesList/MoviesItem/MoviesItem.styled.js","components/MoviesList/MoviesItem/MoviesItem.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","services/moviesApi.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.js","views/MoviesPage.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  margin-left: 30px;\r\n  padding: 5px 8px;\r\n  border-radius: 4px;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #2a363b;\r\n  border: 0;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 120px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  :hover,\r\n  :focus {\r\n    background-color: #2196f3;\r\n    color: #fff;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Button } from './ButtonLoadMore.styled';\r\n\r\nexport default function ButtonLoadMore({ onloadMore }) {\r\n  return (\r\n    <Button type=\"button\" onClick={onloadMore}>\r\n      Load more\r\n    </Button>\r\n  );\r\n}\r\n\r\nButtonLoadMore.propTypes = {\r\n  onloadMore: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #2a363b;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  :hover,\r\n  :focus {\r\n    color: #2196f3;\r\n    ::before {\r\n      background-color: #2196f3;\r\n    }\r\n  }\r\n  ::before {\r\n    content: '';\r\n    display: inline-block;\r\n    margin-right: 15px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 50%;\r\n    background-color: #2a363b;\r\n  }\r\n`;\r\nexport const Item = styled.li`\r\n  :not(:last-child) {\r\n    margin-bottom: 6px;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Item, StyledLink } from './MoviesItem.styled';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function MoviesItem({ id, title }) {\r\n  const location = useLocation();\r\n  return (\r\n    <Item>\r\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\r\n        {title}\r\n      </StyledLink>\r\n    </Item>\r\n  );\r\n}\r\nMoviesItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  margin-bottom: 15px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport MoviesItem from './MoviesItem/MoviesItem';\r\nimport { List } from './MoviesList.styled';\r\n\r\nexport default function MoviesList({ movies }) {\r\n  return (\r\n    <List>\r\n      {movies.map(item => (\r\n        <MoviesItem key={item.id} id={item.id} title={item.title} />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\n","import Axios from 'axios';\r\n\r\nconst API_KEY = 'd3c00761eff125b45afbcd52d8235bc7';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nexport const fetchTrendingMovies = async page => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}trending/movie/week?api_key=${API_KEY}&page=${page}`,\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const fetchMovies = async (query, page) => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const fetchMoviesById = async id => {\r\n  const response = await Axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const fetchCastByMovieId = async id => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`,\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const fetchReviewsByMovieId = async id => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`,\r\n  );\r\n\r\n  return response.data;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 5px 10px;\r\n  width: 300px;\r\n  border: 1px solid #000;\r\n  border-radius: 5px;\r\n  outline: none;\r\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border-color: blue;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n  padding: 5px 5px;\r\n  border-radius: 5px;\r\n  border: 0;\r\n  min-width: 150px;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  color: #000;\r\n  text-decoration: none;\r\n  font-size: 25px;\r\n  font-weight: 600;\r\n  box-shadow: 0px 3px 2px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 1px 0px rgba(0, 0, 0, 0.14), 1px 1px 4px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: blue;\r\n    color: #fff;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport PropTypes from 'prop-types';\r\nimport { RiFileSearchFill } from 'react-icons/ri';\r\nimport { Form, Button, Input } from './Searchbar.styled';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = event => {\r\n    setQuery(event.target.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (query.trim() === '') {\r\n      toast.error(\r\n        'Sorry, there are no movies matching your search query. Please try again.',\r\n        {\r\n          style: {\r\n            border: '1px solid red',\r\n            color: 'red',\r\n          },\r\n        },\r\n      );\r\n      return;\r\n    }\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        name=\"query\"\r\n        value={query}\r\n        onChange={handleChange}\r\n        placeholder=\"Search movies\"\r\n      />\r\n\r\n      <Button type=\"submit\">\r\n        <RiFileSearchFill style={{ color: '#000', width: 35, height: 35 }} />\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport { fetchMovies } from '../services/moviesApi';\r\nimport MoviesList from '../components/MoviesList';\r\nimport Loader from '../components/Loader';\r\nimport ButtonLoadMore from '../components/ButtonLoadMore';\r\nimport Searchbar from '../components/Searchbar';\r\n\r\nexport default function MoviesPage() {\r\n  const [query, setQuery] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showButton, setShowButton] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  let params = new URLSearchParams(location.search).get('query');\r\n\r\n  useEffect(() => {\r\n    if (params !== '' && !query) {\r\n      setQuery(params);\r\n      return;\r\n    }\r\n\r\n    const fetchMoviesByQuery = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const data = await fetchMovies(query, page);\r\n\r\n        if (page === 1) {\r\n          setMovies(data.results);\r\n        } else {\r\n          setMovies(state => [...state, ...data.results]);\r\n        }\r\n\r\n        if (data.total_pages === page) {\r\n          setShowButton(false);\r\n        } else {\r\n          setShowButton(true);\r\n        }\r\n      } catch {\r\n        toast.error('Error!');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchMoviesByQuery();\r\n  }, [page, params, query]);\r\n\r\n  const handleFormSubmit = query => {\r\n    navigate({ ...location, search: `query=${query}` });\r\n    setQuery(query);\r\n    setPage(1);\r\n  };\r\n  const handelLoadMore = () => {\r\n    setPage(state => state + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n\r\n      {movies.length > 0 && <MoviesList movies={movies} />}\r\n\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        showButton && <ButtonLoadMore onloadMore={handelLoadMore} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Button","styled","ButtonLoadMore","onloadMore","type","onClick","StyledLink","Link","Item","MoviesItem","id","title","location","useLocation","to","state","from","List","MoviesList","movies","map","item","API_KEY","BASE_URL","fetchTrendingMovies","page","Axios","response","data","fetchMovies","query","fetchMoviesById","fetchCastByMovieId","fetchReviewsByMovieId","Form","Input","Searchbar","onSubmit","useState","setQuery","event","preventDefault","trim","toast","style","border","color","autoComplete","autoFocus","name","value","onChange","target","toLowerCase","placeholder","width","height","MoviesPage","setMovies","setPage","isLoading","setIsLoading","showButton","setShowButton","navigate","useNavigate","params","URLSearchParams","search","get","useEffect","fetchMoviesByQuery","results","total_pages","length","Loader"],"sourceRoot":""}