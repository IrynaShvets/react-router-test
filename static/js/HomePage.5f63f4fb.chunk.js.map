{"version":3,"file":"static/js/HomePage.5f63f4fb.chunk.js","mappings":"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","sources":["components/ButtonLoadMore/ButtonLoadMore.styled.js","components/ButtonLoadMore/ButtonLoadMore.js","components/MoviesList/MoviesItem/MoviesItem.styled.js","components/MoviesList/MoviesItem/MoviesItem.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","services/moviesApi.js","components/PageTitle/PageTitle.styled.js","components/PageTitle/PageTitle.js","views/HomePage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  margin-left: 30px;\r\n  padding: 5px 8px;\r\n  border-radius: 4px;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #2a363b;\r\n  border: 0;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 120px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  :hover,\r\n  :focus {\r\n    background-color: #2196f3;\r\n    color: #fff;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Button } from './ButtonLoadMore.styled';\r\n\r\nexport default function ButtonLoadMore({ onloadMore }) {\r\n  return (\r\n    <Button type=\"button\" onClick={onloadMore}>\r\n      Load more\r\n    </Button>\r\n  );\r\n}\r\n\r\nButtonLoadMore.propTypes = {\r\n  onloadMore: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #2a363b;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  :hover,\r\n  :focus {\r\n    color: #2196f3;\r\n    ::before {\r\n      background-color: #2196f3;\r\n    }\r\n  }\r\n  ::before {\r\n    content: '';\r\n    display: inline-block;\r\n    margin-right: 15px;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 50%;\r\n    background-color: #2a363b;\r\n  }\r\n`;\r\nexport const Item = styled.li`\r\n  :not(:last-child) {\r\n    margin-bottom: 6px;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Item, StyledLink } from './MoviesItem.styled';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function MoviesItem({ id, title }) {\r\n  const location = useLocation();\r\n  return (\r\n    <Item>\r\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\r\n        {title}\r\n      </StyledLink>\r\n    </Item>\r\n  );\r\n}\r\nMoviesItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  margin-bottom: 15px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport MoviesItem from './MoviesItem/MoviesItem';\r\nimport { List } from './MoviesList.styled';\r\n\r\nexport default function MoviesList({ movies }) {\r\n  return (\r\n    <List>\r\n      {movies.map(item => (\r\n        <MoviesItem key={item.id} id={item.id} title={item.title} />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\n","import Axios from 'axios';\r\n\r\nconst API_KEY = 'd3c00761eff125b45afbcd52d8235bc7';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nexport const fetchTrendingMovies = async page => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}trending/movie/week?api_key=${API_KEY}&page=${page}`,\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const fetchMovies = async (query, page) => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const fetchMoviesById = async id => {\r\n  const response = await Axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const fetchCastByMovieId = async id => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`,\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const fetchReviewsByMovieId = async id => {\r\n  const response = await Axios.get(\r\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`,\r\n  );\r\n\r\n  return response.data;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 35px;\r\n  font-weight: 700;\r\n  margin-bottom: 25px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Title } from './PageTitle.styled';\r\n\r\nexport default function PageTitle({ text }) {\r\n  return <Title>{text}</Title>;\r\n}\r\nPageTitle.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { fetchTrendingMovies } from '../services/moviesApi';\r\nimport PageTitle from '../components/PageTitle';\r\nimport ButtonLoadMore from '../components/ButtonLoadMore';\r\nimport Loader from '../components/Loader';\r\nimport MoviesList from '../components/MoviesList';\r\n\r\nexport default function HomePage() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [showButton, setShowButton] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const data = await fetchTrendingMovies(page);\r\n\r\n        if (data.total_pages === page) {\r\n          setShowButton(false);\r\n        } else {\r\n          setShowButton(true);\r\n        }\r\n\r\n        if (page === 1) {\r\n          setMovies(data.results);\r\n        } else {\r\n          setMovies(movies => [...movies, ...data.results]);\r\n        }\r\n      } catch {\r\n        toast.error('Error!');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchMovies();\r\n  }, [page]);\r\n\r\n  const handelLoadMore = () => {\r\n    setPage(page => page + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle text=\"Trending Movies for the week\" />\r\n\r\n      <MoviesList movies={movies} />\r\n\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        showButton && <ButtonLoadMore onloadMore={handelLoadMore} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Button","styled","ButtonLoadMore","onloadMore","type","onClick","StyledLink","Link","Item","MoviesItem","id","title","location","useLocation","to","state","from","List","MoviesList","movies","map","item","API_KEY","BASE_URL","fetchTrendingMovies","page","Axios","response","data","fetchMovies","query","fetchMoviesById","fetchCastByMovieId","fetchReviewsByMovieId","Title","PageTitle","text","HomePage","useState","setMovies","setPage","showButton","setShowButton","isLoading","setIsLoading","useEffect","total_pages","results","toast","Loader","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}